"""
Django settings for API Demo project.

Generated by ``django-admin startproject`` using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import secrets
import warnings

import environ

import moneyed
from moneyed.localization import _FORMATTER

# django-environ initialization
root = environ.Path(__file__) - 2  # type: Callable[[*str], str]
env = environ.Env()
environ.Env.read_env(root(".env"))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG", default=False)

# SECURITY WARNING: keep the secret key used in production secret!
if DEBUG:
    # For DEBUG environment only, allow not specifying secret key
    SECRET_KEY = env("SECRET_KEY", default=None)
    if SECRET_KEY is None:
        # If not specified, use an ephemeral random 128-bit value
        # This will invalidate signatures on restarts
        SECRET_KEY = secrets.token_urlsafe(16)
        warnings.warn(
            "SECRET_KEY is not set! An ephemeral random value will be used."
        )
else:
    # Specifying secret key is mandatory when DEBUG is disabled
    SECRET_KEY = env("SECRET_KEY")


ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=[])

# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = "DENY"

# Quick switch that tells if site is TLS-secured or not
if env.bool("USE_SSL", default=not DEBUG):
    # Secure cookies
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True

    # HTTP Strict Transport Security
    SECURE_HSTS_SECONDS = env.int("SECURE_HSTS_SECONDS", default=31536000)
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "whitenoise.runserver_nostatic",
    "rest_framework",
    "djmoney",
    "django_filters",

    "payments",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "api_demo.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "api_demo.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    "default": env.db(default="postgres://localhost/api_demo")
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.{cls}".format(cls=n),
    }
    for n in (
        "UserAttributeSimilarityValidator",
        "MinimumLengthValidator",
        "CommonPasswordValidator",
        "NumericPasswordValidator",
    )
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = False

USE_L10N = False

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = env("STATIC_ROOT", default=root("static.run"))
STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]

# Django-Money: restrict list of possible currencies
# See also: https://github.com/django-money/django-money#adding-a-new-currency

# XBT is unofficial but ISO 4217-conformant code for Bitcoin
BTC = moneyed.add_currency("XBT", "Nil", "Bitcoin", [])
_FORMATTER.add_sign_definition("default", BTC, suffix=" BTC")

CURRENCIES = ("USD", "EUR", "PHP", "XBT")

# Django REST Framework configuration

REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": (
        # Let's omit BrowsableAPIRenderer and use CoreAPI tooling instead.
        "rest_framework.renderers.JSONRenderer",
    ),
    "DEFAULT_PAGINATION_CLASS": "api_demo.pagination.DefaultPagination",
}
